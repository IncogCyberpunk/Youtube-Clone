.header{
    
    height: 55px;
    display:flex;
    flex-direction: row;
    justify-content: space-between;
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    background-color: white;
    border-bottom-width: 1px;
    border-bottom-style: solid;
    border-bottom-color: rgb(236, 234, 234);
    z-index: 100;
}

.left-section{
    width: 200px; 
    display: flex;
    justify-content: space-evenly;
    align-items: center;
}

.hamburger{
    width:28px;
    margin-right:15px;
    margin-left:15px;
    cursor: pointer;
}

.youtube-logo{
    width: 100px;

}

.middle-section{
    display: flex;
    flex: 1;
/* 
    If not specified the `flex-direction` property is set to row-gap
    but if the flex-direction is column then the 
    roles of justify-content and align-items are interchanged. */
    
    justify-content:space-between;
    align-items: center;
    margin-left: 30px;
    margin-right: 30px;
    max-width: 475px;
    
}


.search-bar{
    display:flex;
    flex: 1;
    height: 32px;
    width: 375px;
    border-width: 1px;
    border-style: solid;
    border-color: rgba(129, 129, 129, 0.8);
    box-shadow: inset 1px 2.5px 2.5px rgba(0,0,0, 0.15);
    margin-left: 0;
    border-radius: 3px;
    padding-left: 5px;
    font-size: 17px;
    /* Width 0 is allowing the screen to basically 
    make the search bar very small to size-adjust
    with the dimensions of the screen */
    width: 0;
    
    
}

.search-bar::placeholder{
    font-weight: normal;
    font-size: 17px;
    line-height: 3px;
    padding-left: 5px;
    
    
}

.search-img{
 
    height: 21px;
    margin-top: 6px;
    margin-bottom: 5px;
    width: 40px;
    
    
}
/* 
here first the container containing the elements are made relative 
and then the labels are made by creating div elements and making them absolute */
.search-button{
    margin-right: 5px;
}

.search-button,
.voice-search-button
{

    display: flex;
    justify-content: center;
    align-items: center;
    border-style: solid;
    cursor: pointer;
    border-width: 1px;
    border-radius: 3px;
    border-color: rgba(129, 129, 129, 0.8);
    margin-left: -1px;
    position: relative;
}

.upload-container,.youtube-apps-container,.notification-container{
    display:flex;
    position: relative;
    justify-content: center;
    align-items: center;
}

.search-button .tooltip,
.voice-search-button .tooltip,
.upload-container .tooltip,
.youtube-apps-container .tooltip,
.notification-container .tooltip
{
    position: absolute;
    color:white;
    padding: 8px 8px;
    opacity: 0;   
    font-size: 12px;
    border-radius: 2px;
    font-weight: 400;   
    background-color: gray;
    bottom: -32px;
/* 
    If you keep left or right here for absolute the tooltip will 
    not be in center even if you use flexbox and align them in 
    centre so you should not use any left or right here and 
    use flexbox to keep the tooltip in center */

    white-space: nowrap; 
}

.search-button:hover .tooltip,
.voice-search-button:hover .tooltip,
.upload-container:hover .tooltip,
.youtube-apps-container:hover .tooltip,
.notification-container:hover .tooltip{
    opacity:0.9;
    pointer-events: none;
}

.voice-search-button{
    height: 40px;
    width: 40px;
    border-radius:20px;
    border-width: 1px;
    border: none;
    background-color: rgba(223, 223, 223, 0.247);
    border-color:rgba(88, 87, 87, 0.7)
}
.voice-search-img{
    width: 25px;
    background-color: none;
}



/* RIGHT SECTION OF THE HEADER */


.right-section{
    width: 200px;
    margin-right: 10px;
    display: flex;
    justify-content: space-between;
    align-items: center;

    /* Flex-shrink 0 is not letting the right 
    section shrink so that it's size remains 
    same in every resolution of screen */
    flex-shrink: 0;
}

.upload,.youtube-apps,.notifications{
    height: 24px;
    
}
.upload:hover,.youtube-apps:hover,.notifications:hover,.my-channel:hover{
    cursor: pointer;
}

/* Putting the border-radius half of the img gives a circle
and putting the border-radius of same dimensions of width it gives round edges. */

.my-channel{
    width: 32px;
    border-radius: 16px;
    
}

/* Put absolute positions inside of the relative containers and make the 
containers conataining the items relative not the items */
      


.notifications-count{
    background-color: red;   
    color: white;
    border-radius: 13px;
    text-align: center;
    padding: 1px 2.5px;
    position: absolute;
    font-size: 12px;
    top: -4px;
    right:-2px;

}
